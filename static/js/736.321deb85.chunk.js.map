{"version":3,"file":"static/js/736.321deb85.chunk.js","mappings":"2NAEO,MAAMA,EAAWC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFASrBC,EAAWJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6G,aCJlC,MAwCA,EAxCaG,KACX,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,QAAEC,IAAYC,EAAAA,EAAAA,OAEpBC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,GAAUH,GACPI,MAAKC,GAAWP,EAAQO,EAAQR,QAChCS,OAAMC,IACLC,QAAQD,MAAMA,EAAME,SACpBX,EAAQ,GAAG,GACX,GACH,CAACE,IAGJ,OACEU,EAAAA,EAAAA,KAAA,MAAAC,SACGd,EAAKe,KAAIC,IAAA,IAAC,GAAEC,EAAE,aAAEC,EAAY,cAAEC,EAAa,KAAEC,EAAI,UAAEC,GAAWL,EAAA,OAC7DM,EAAAA,EAAAA,MAAC9B,EAAQ,CAAAsB,SAAA,EAELD,EAAAA,EAAAA,KAAA,OACEU,IAAKL,EAAY,GAAAM,OAPZ,mCAQUA,OAAGN,GACdO,EACJC,IAAKP,EACLQ,MAAM,SAGVL,EAAAA,EAAAA,MAACzB,EAAQ,CAAAiB,SAAA,EACPQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,UAAS,IAAEM,MAEhBE,EAAAA,EAAAA,MAAA,KAAAR,SAAA,EACAD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAAc,IAAEO,UAfRJ,EAkBJ,KAEV,C,kFC1CTW,EAAAA,EAAMC,SAASC,QAAU,+BACzB,MAAMC,EAAU,mCAGHC,EAAgBC,UAC3B,MAAMC,EAAS,CACbC,QAASJ,EACTK,KAAM,IAEF,KAAEC,SAAeT,EAAAA,EAAMU,IAAI,sBAAuB,CAAEJ,WAC1D,OAAOG,EAAKE,OAAO,EAIRC,EAAoBP,UAC/B,MAAMC,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNK,UAEI,KAAEJ,SAAeT,EAAAA,EAAMU,IAAI,gBAAiB,CAAEJ,WAEpD,OADAvB,QAAQ+B,IAAIL,EAAKE,SACVF,EAAKE,QAAQI,QAAOC,GACzBA,EAAMC,MAAMC,cAAcC,SAASN,EAAMK,gBAC1C,EAGUE,EAAgBf,UAC3B,MAAMC,EAAS,CACbC,QAASJ,EACTK,KAAM,IAEF,KAAEC,SAAeT,EAAAA,EAAMU,IAAI,UAADd,OAAWrB,GAAW,CAAE+B,WACxD,OAAOG,CAAI,EAIA/B,EAAY2B,UACvB,MAAMC,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNa,SAAU,SAEX,IACD,MAAM,KAAEZ,SAAeT,EAAAA,EAAMU,IAAI,UAADd,OAAWrB,EAAO,YAAY,CAAE+B,WAChE,OAAOG,CACT,CAAE,MAAO3B,GAEP,MADAC,QAAQD,MAAMA,EAAME,SACd,IAAIsC,MAAM,uBAClB,GAIaC,EAAelB,UAC1B,MAAMC,EAAS,CACbC,QAASJ,EACTK,KAAM,EACNa,SAAU,UAEN,KAAEZ,SAAeT,EAAAA,EAAMU,IAAI,UAADd,OAAWrB,EAAO,YAAY,CAAE+B,WAEhE,OADAvB,QAAQ+B,IAAIL,GACLA,EAAKE,OAAO,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/services.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastItem = styled.div`\n  display: flex;\n  gap: 24px;\n\n  & + & {\n    margin-top: 16px;\n  }\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n`;","import { useState, useEffect } from 'react'; \nimport { useParams } from 'react-router-dom'; \nimport { fetchCast } from 'services/services'; \nimport imgnf from '../../pages/img/imgnf.jpg'\nimport { CastInfo, CastItem } from './Cast.styled';\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(credits => setCast(credits.cast))\n      .catch(error => {\n        console.error(error.message);\n        setCast([]);\n      });\n  }, [movieId]);\n\n  const imageUrl = 'https://image.tmdb.org/t/p/w300'; \n  return (\n    <ul>\n      {cast.map(({ id, profile_path, original_name, name, character }) => (\n        <CastItem key={id}>\n      \n            <img\n              src={profile_path \n                ? `${imageUrl}${profile_path}`\n                : imgnf}\n              alt={original_name}\n              width=\"120\"\n            />\n      \n          <CastInfo>\n            <p>\n              <b>Name:</b> {name}\n            </p>\n            <p>\n            <b>Character:</b> {character}\n            </p>\n          </CastInfo>\n        </CastItem>\n      ))}\n    </ul>\n  );\n};\nexport default Cast;\n\n","import axios from 'axios'; \n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6cbea8cece37cf85eba0b83585dd8520';\n\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1, \n  }; \n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\n\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  console.log(data.results)\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  return data;\n};\n\n\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n   try{  \n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n} catch (error) {\n  console.error(error.message);\n  throw new Error('Failed to fetch cast');\n}\n};\n\n\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  console.log(data);\n  return data.results;\n  \n};\n\n"],"names":["CastItem","styled","div","_templateObject","_taggedTemplateLiteral","CastInfo","_templateObject2","Cast","cast","setCast","useState","movieId","useParams","useEffect","fetchCast","then","credits","catch","error","console","message","_jsx","children","map","_ref","id","profile_path","original_name","name","character","_jsxs","src","concat","imgnf","alt","width","axios","defaults","baseURL","API_KEY","fetchTrending","async","params","api_key","page","data","get","results","fetchSearchResult","query","log","filter","movie","title","toLowerCase","includes","fetchOneMovie","language","Error","fetchReviews"],"sourceRoot":""}