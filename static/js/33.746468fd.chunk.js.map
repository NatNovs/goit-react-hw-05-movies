{"version":3,"file":"static/js/33.746468fd.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/services.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const BackButton = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  margin-bottom: 24px;\n  padding: 8px 16px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  transition: border-color 400ms ease, color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #ff7341;\n    color: #ff7341;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  padding: 24px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n`;\n\nexport const AdditionalList = styled.ul`\n  list-style: none;\n`;\n\nexport const SubMenuLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  text-decoration: none;\n  color: inherit;\n  font-size: 24px;\n  transition: color 400ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #ff7341;\n  }\n`;","import { useEffect, useRef, useState } from 'react'; \nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchOneMovie } from 'services/services'; \nimport { RxArrowLeft, RxArrowRight } from 'react-icons/rx'; \nimport img from '../img/imgnf.jpg'\nimport {\n  AdditionalInfo,\n  AdditionalList,\n  BackButton,\n  DetailsContainer,\n  MovieInfo,\n  SubMenuLink,\n} from './MovieDetails.styled'; \n\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchOneMovie(movieId)\n      .then(chosenMovie => setMovie(chosenMovie))\n      .catch(error => {\n        console.error(error.message);\n        setMovie({});\n      });\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  function countUserScore() {\n    const average = movie.vote_average;\n    const userScore = Math.round(average * 10).toFixed(0) + '%';\n    return userScore;\n  }\n\n  const { genres } = movie;\n  const releaseDate = new Date(movie.release_date).getFullYear();\n  const imageUrl = 'https://image.tmdb.org/t/p/w300';\n  const posterPath = movie.poster_path;\n  const productionCountries = movie.production_countries;\n\n  return (\n    <DetailsContainer>\n      <BackButton to={backLinkRef.current}>\n        <RxArrowLeft />\n        Go back\n      </BackButton>\n      <MovieInfo>\n        {\n          <img\n            src={posterPath ? `${imageUrl}${posterPath}` : img}\n            alt={movie.title}\n          />\n        }\n        <div>\n          <h2>\n            {movie.title} ({releaseDate ? releaseDate : movie.status})\n          </h2>\n          <p>\n            Made in:{' '}\n            {productionCountries &&\n              productionCountries.map(country => country.name).join(', ')}\n          </p>\n          <p>User Score: {countUserScore()}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(' ')} </p>\n        </div>\n      </MovieInfo>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <AdditionalList>\n          <li>\n            <SubMenuLink to=\"cast\">\n              <RxArrowRight />\n              Cast\n            </SubMenuLink>\n          </li>\n          <li>\n            <SubMenuLink to=\"reviews\">\n              <RxArrowRight />\n              Reviews\n            </SubMenuLink>\n          </li>\n        </AdditionalList>\n        <Outlet />\n      </AdditionalInfo>\n    </DetailsContainer>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios'; \n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6cbea8cece37cf85eba0b83585dd8520';\n\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1, \n  }; \n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\n\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  console.log(data.results)\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  return data;\n};\n\n\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n   try{  \n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n} catch (error) {\n  console.error(error.message);\n  throw new Error('Failed to fetch cast');\n}\n};\n\n\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  console.log(data);\n  return data.results;\n  \n};\n\n"],"names":["BackButton","styled","Link","_templateObject","_taggedTemplateLiteral","DetailsContainer","div","_templateObject2","MovieInfo","_templateObject3","AdditionalInfo","_templateObject4","AdditionalList","ul","_templateObject5","SubMenuLink","_templateObject6","MovieDetails","_location$state$from","_location$state","movie","setMovie","useState","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useEffect","fetchOneMovie","then","chosenMovie","catch","error","console","message","genres","releaseDate","Date","release_date","getFullYear","posterPath","poster_path","productionCountries","production_countries","_jsxs","children","to","current","_jsx","RxArrowLeft","src","concat","img","alt","title","status","map","country","name","join","average","vote_average","Math","round","toFixed","countUserScore","overview","genre","RxArrowRight","Outlet","axios","defaults","baseURL","API_KEY","fetchTrending","async","params","api_key","page","data","get","results","fetchSearchResult","query","log","filter","toLowerCase","includes","fetchCast","language","Error","fetchReviews"],"sourceRoot":""}