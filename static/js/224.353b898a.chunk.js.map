{"version":3,"file":"static/js/224.353b898a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/services.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom' \nimport PropTypes from 'prop-types';\n\nimport { List, Item, MovieLink } from './MoviesList.styled';\n\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation(); \n\n  return (\n    <List> \n      {movies.length > 0 && \n      movies.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n            </MovieLink>\n          </Item>\n        );\n      })}\n    </List>\n\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  margin-left: 10px;\n  border-radius: 4px;\n  outline: none;\n\n  &:hover {\n    color: #ff7341;\n    border: 3px solid #ff7341;\n    transition: color 400ms ease;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px;\n  transition: color 400ms ease;\n\n  &:hover {\n    color: #ff7341;\n    border: 3px solid #ff7341;\n\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types'; \nimport { Input, SearchForm, Button } from './Form.styled'; \n\nconst Form = ({setParams}) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setParams(query);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={query} \n        placeholder={'Enter movies title ...'}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n\tsetParams: PropTypes.func.isRequired,\n}\n","import styled from '@emotion/styled';\n\nexport const MoviesBox = styled.div`\n  /* padding: 24px; */\n  border: 1px solid grey;\n  border-radius: 10px;\n    margin-bottom: 48px;\n    padding: 8px 16px;\n    background-color: #d9dede;\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchResult } from 'services/services';\nimport Loader from 'components/Loader/Loader';\nimport Form from 'components/Form/Form'; \nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { MoviesBox } from './Movies.styled'; \n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [requestFall, setRequestFall] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies([]);\n      return;\n     }\n    setLoading(true);\n    const answer = fetchSearchResult(query)\n      .then(foundedMovies => {\n        setMovies(foundedMovies);\n        setRequestFall(foundedMovies.length === 0)\n      })\n\n      .catch(error => {\n        console.error(error.message);\n        setMovies([]);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n      console.log(answer)\n  }, [query]);\n  \n\n  const setParams = query => {\n    const params = query !== '' ? { query } : {};\n    setSearchParams(params);\n    // console.log(params)\n  };\n\n  return (\n    <MoviesBox>\n      <Form setParams={setParams} />\n      {loading && <Loader />}\n      {requestFall && (<h1>No movies with this request. Please, try again</h1>) }\n      {(query && movies.length > 0) && <h1>Found movies</h1>}\n      {!!movies.length && <MoviesList movies={movies} />}\n    </MoviesBox>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios'; \n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6cbea8cece37cf85eba0b83585dd8520';\n\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1, \n  }; \n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\n\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  console.log(data.results)\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  return data;\n};\n\n\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n   try{  \n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n} catch (error) {\n  console.error(error.message);\n  throw new Error('Failed to fetch cast');\n}\n};\n\n\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  console.log(data);\n  return data.results;\n  \n};\n\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","MovieLink","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","length","map","_ref2","id","title","to","concat","state","from","SearchForm","form","Input","input","Button","button","setParams","query","setQuery","useState","_jsxs","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","trim","toLowerCase","MoviesBox","div","Movies","_searchParams$get","setMovies","searchParams","setSearchParams","useSearchParams","loading","setLoading","requestFall","setRequestFall","get","useEffect","answer","fetchSearchResult","then","foundedMovies","catch","error","console","message","finally","log","Form","Loader","MoviesList","axios","defaults","baseURL","API_KEY","fetchTrending","async","params","api_key","page","data","results","filter","movie","includes","fetchOneMovie","movieId","fetchCast","language","Error","fetchReviews"],"sourceRoot":""}